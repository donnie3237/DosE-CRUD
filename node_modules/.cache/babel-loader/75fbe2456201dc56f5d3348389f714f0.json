{"ast":null,"code":"import './detail.css';\nfunction Detail() {\n  // \tconst [user, setUser] = useState({});\n\n  // \tlet link = window.location.href\n  // \tlet userId = link.replace('http://localhost:3000/#/list/view/','').toString()\n  //     console.log(\"userId:\"+userId)\n  // \tuseEffect(\n  // \t\tfunction () {\n  // \t\t\tasync function getCrudById() {\n  // \t\t\t\ttry {\n  // \t\t\t\t\tconst response = await axios.get(`https://dose.herokuapp.com/api/${userId}`\n  // \t\t\t\t\t);\n  // \t\t\t\t\tsetUser(response.data);\n  // \t\t\t\t} catch (error) {\n  // \t\t\t\t\tconsole.log(\"error\", error);\n  // \t\t\t\t}\n  // \t\t\t}\n  // \t\t\tgetCrudById();\n  // \t\t},\n  // \t);\n  // \tconsole.log(user.name)\n  //   return (\n  // \t<>\n  // \t{user &&\n  // \t\tuser.map((user) => {\n  // \t\t\treturn (\n  // \t\t\t\t<tr key={user._id}>\n  // \t\t\t\t<td>{user.name}</td>\n  // \t\t\t\t<td>{user.age}</td>\n  // \t\t\t\t</tr>\n  // \t\t\t\t)\n  // \t\t\t}\n  // \t\t)\n\n  // \t</>\n}\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["Detail"],"sources":["C:/Users/acer/Downloads/calculator-main/Crud-app/src/Components/detail/Detail.tsx"],"sourcesContent":["import React from 'react'\r\nimport {Link , useParams} from 'react-router-dom'\r\nimport './detail.css'\r\nimport { useState ,useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nfunction Detail() {\r\n// \tconst [user, setUser] = useState({});\r\n\r\n// \tlet link = window.location.href\r\n// \tlet userId = link.replace('http://localhost:3000/#/list/view/','').toString()\r\n//     console.log(\"userId:\"+userId)\r\n// \tuseEffect(\r\n// \t\tfunction () {\r\n// \t\t\tasync function getCrudById() {\r\n// \t\t\t\ttry {\r\n// \t\t\t\t\tconst response = await axios.get(`https://dose.herokuapp.com/api/${userId}`\r\n// \t\t\t\t\t);\r\n// \t\t\t\t\tsetUser(response.data);\r\n// \t\t\t\t} catch (error) {\r\n// \t\t\t\t\tconsole.log(\"error\", error);\r\n// \t\t\t\t}\r\n// \t\t\t}\r\n// \t\t\tgetCrudById();\r\n// \t\t},\r\n// \t);\r\n// \tconsole.log(user.name)\r\n//   return (\r\n// \t<>\r\n// \t{user &&\r\n// \t\tuser.map((user) => {\r\n// \t\t\treturn (\r\n// \t\t\t\t<tr key={user._id}>\r\n// \t\t\t\t<td>{user.name}</td>\r\n// \t\t\t\t<td>{user.age}</td>\r\n// \t\t\t\t</tr>\r\n// \t\t\t\t)\r\n// \t\t\t}\r\n// \t\t)\r\n\r\n// \t</>\r\n}\r\n\r\nexport default Detail"],"mappings":"AAEA,OAAO,cAAc;AAKrB,SAASA,MAAM,GAAG;EAClB;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;AACA;AAAC,KAnCQA,MAAM;AAqCf,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module"}